"""
Django settings for MonitorOfCloud project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ys3k%+quh^q-yf19_f_0@jij*q3!dye!$fwki&2=bqo)&udqug'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    # 'DEFAULT_AUTHENTICATION_CLASSES': (
    #     'rest_framework.authentication.BasicAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    # ),
}

INSTALLED_APPS = [
    # 'channels',
    'backend',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
# 全局变量---用来存放来自边缘端的异常地点信息
new_exception = {}

# 全局变量---用来存放http请求地址
my_http = "http://127.0.0.1:8080"

# ASGI_APPLICATION = 'MonitorOfCloud.routing.application'

WSGI_APPLICATION = 'MonitorOfCloud.wsgi.application'


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # 2 解决 "Access-Control-Allow-Origin"
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# 设置响应头 Access-Control-Allow-Credentials:true
# 允许使用cookies
CORS_ALLOW_CREDENTIALS = True

# 3 解决 "Access-Control-Allow-Origin"
CORS_ORIGIN_ALLOW_ALL = True   #允许所有origin 访问


ROOT_URLCONF = 'MonitorOfCloud.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'DIRS': ['fronted/dist/index.html'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'zh-Hans'

# 两个都要设置否则会差8小时
TIME_ZONE = 'Asia/Shanghai'
USE_TZ = False

USE_I18N = True

USE_L10N = True



# 例如一个请求  http://localhost:8080/static/js/xxx.js  匹配到url前缀  xxxx/static/   取出将剩余/js/xxx.js 到底下STATICFILES_DIRS设置的目录进行查找
STATIC_URL = '/static/'

# Add for vuejs
# 在生产环境 Debug=True 的情况下才能使用
# 匹配url前缀/static/ 之后,在fronted/dist/static目录下 查询 /js/xxx.js
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'fronted/dist/static'),
]


# CHANNEL_LAYERS  =  {
# #     "default":{
# #         # 这里是路由的路径，怎么填写都可以，只要能找到
# #         "BACKEND": "asgiref.inmemory.ChannelLayer",
# #     },
# # }